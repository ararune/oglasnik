# Generated by Django 5.0.6 on 2024-05-27 16:28

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import oglasnik.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Grad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('naziv', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Grad',
                'verbose_name_plural': 'Gradovi',
            },
        ),
        migrations.CreateModel(
            name='Zupanija',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('naziv', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Zupanije',
                'verbose_name_plural': 'Zupanije',
            },
        ),
        migrations.CreateModel(
            name='Korisnik',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('oib', models.CharField(max_length=11, null=True, validators=[django.core.validators.RegexValidator('^\\d{11}$', message='OIB must be exactly 11 digits')])),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('grad', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='oglasnik.grad')),
                ('zupanija', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='oglasnik.zupanija')),
            ],
            options={
                'verbose_name': 'Korisnik',
                'verbose_name_plural': 'Korisnici',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Kategorija',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('naziv', models.CharField(max_length=100)),
                ('url', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('roditelj', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='oglasnik.kategorija')),
            ],
            options={
                'verbose_name': 'Kategorija',
                'verbose_name_plural': 'Kategorije',
            },
        ),
        migrations.CreateModel(
            name='Oglas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cijena', models.DecimalField(decimal_places=2, max_digits=10)),
                ('sifra', models.CharField(default=oglasnik.models.Oglas.generiraj_sifru, editable=False, max_length=8, unique=True)),
                ('naziv', models.CharField(max_length=255)),
                ('opis', models.TextField()),
                ('trajanje', models.IntegerField(choices=[(1, '1 dan'), (7, '1 tjedan'), (30, '1 mjesec')])),
                ('datum', models.DateTimeField(auto_now_add=True)),
                ('grad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='oglasnik.grad')),
                ('kategorija', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='oglasnik.kategorija')),
                ('korisnik', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('zupanija', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='oglasnik.zupanija')),
            ],
            options={
                'verbose_name': 'Oglas',
                'verbose_name_plural': 'Oglasi',
            },
        ),
        migrations.CreateModel(
            name='Slika',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slika', models.ImageField(upload_to='slike/')),
                ('oglas', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='slike', to='oglasnik.oglas')),
            ],
        ),
        migrations.AddField(
            model_name='grad',
            name='zupanija',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='oglasnik.zupanija'),
        ),
    ]
